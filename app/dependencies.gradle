ext {
    versions = [
            lifecycle            : '2.1.0',
            androidXSupport      : '1.0.0',
            rxJava               : '2.2.8',
            rxJavaAndroid        : '2.1.1',
            okHttp               : '3.14.1',
            retrofit             : '2.6.1',
            roomVersion          : '2.2.0-rc01',
            constraintLayout     : '1.1.3',
            dagger               : '2.22.1',
            butterKnife          : '10.1.0',
            rxJava               : '2.2.8',
            rxJavaAndroid        : '2.1.1',
            glide                : '4.9.0',
            permissionsDispatcher: '4.3.1',
            overScrollAnimation  : '1.0.4',

    ]

    annotationCompiler = [
            viewModelCompiler              : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
            roomCompiler                   : "androidx.room:room-compiler:$versions.roomVersion",
            daggerCompiler                 : "com.google.dagger:dagger-compiler:$versions.dagger",
            daggerProcessor                : "com.google.dagger:dagger-android-processor:$versions.dagger",
            butterKifeCompiler             : "com.jakewharton:butterknife-compiler:$versions.butterKnife",
            glideCompiler                  : "com.github.bumptech.glide:compiler:$versions.glide",
            permissionsDispatcherAnnotation: "org.permissionsdispatcher:permissionsdispatcher-processor:$versions.permissionsDispatcher"
    ]

    viewModel = [
            viewModel        : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
            viewModelReactive: "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
    ]

    supportDeps = [
            cardView         : "androidx.cardview:cardview:$versions.androidXSupport",
            appcompatV7      : "androidx.appcompat:appcompat:$versions.androidXSupport",
            design           : "com.google.android.material:material:$versions.androidXSupport",
            recyclerView     : "androidx.recyclerview:recyclerview:$versions.androidXSupport",
            supportAnnotation: "androidx.annotation:annotation:$versions.androidXSupport",
            constraintLayout : "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    ]

    rxJava = [
            rxJava   : "io.reactivex.rxjava2:rxjava:$versions.rxJava",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:$versions.rxJavaAndroid",
    ]

    retrofit = [
            retrofit     : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter    : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            gsonConverter: "com.squareup.retrofit2:converter-gson:$versions.retrofit",
            logger       : "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
            okhttp       : "com.squareup.okhttp3:okhttp:$versions.okHttp"
    ]

    database = [
            room      : "androidx.room:room-runtime:$versions.roomVersion",
            roomRXJava: "androidx.room:room-rxjava2:$versions.roomVersion"
    ]

    dagger = [
            dagger              : "com.google.dagger:dagger:$versions.dagger",
            daggerAndroid       : "com.google.dagger:dagger-android:$versions.dagger",
            daggerSupportAndroid: "com.google.dagger:dagger-android-support:$versions.dagger"
    ]

    glide = [
            glide      : "com.github.bumptech.glide:glide:$versions.glide",
            glideOkhttp: "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
    ]

    others = [
            butterKnife          : "com.jakewharton:butterknife:$versions.butterKnife",
            overScrollEveryThing : "me.everything:overscroll-decor-android:$versions.overScrollAnimation",
            permissionsDispatcher: "org.permissionsdispatcher:permissionsdispatcher:$versions.permissionsDispatcher"
    ]

    viewModelLib        = viewModel.values()
    databaseLib         = database.values()
    androidSupportLibs  = supportDeps.values()
    rxJavaLibs          = rxJava.values()
    networkLibs         = retrofit.values()
    daggerLib           = dagger.values()
    glideLib            = glide.values()

    otherLib = others.values()

    annotationProcessorLibs = annotationCompiler.values()

}